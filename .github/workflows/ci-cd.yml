# .github/workflows/ci-cd.yml

name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_MLFLOW: ${{ github.repository_owner }}/mlflow
  IMAGE_API: ${{ github.repository_owner }}/creditcard-api
  TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push MLflow image
        run: |
          docker build \
            --platform=linux/amd64 \
            -f Dockerfile.mlflow \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_MLFLOW }}:${{ env.TAG }} .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_MLFLOW }}:${{ env.TAG }}

      - name: Build and push API image
        run: |
          docker build \
            --platform=linux/amd64 \
            -f Dockerfile.api \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_API }}:${{ env.TAG }} .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_API }}:${{ env.TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/credit-card-fraud-detection1
            git pull origin main  # Optional: sync code (e.g. new compose file)
            
            # üîê Log in to GitHub Container Registry
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            docker compose pull
            docker compose up -d --remove-orphans
            echo "Deployment complete."

