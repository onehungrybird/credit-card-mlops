name: Train ML Model

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  MLFLOW_TRACKING_URI: http://localhost:5000

jobs:
  train:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create directories
      run: |
        mkdir -p data/raw data/processed models/artifacts mlflow/mlruns mlflow/artifacts
        
    - name: Start MLflow server
      run: |
        mlflow server \
          --backend-store-uri sqlite:///mlflow/mlflow.db \
          --default-artifact-root mlflow/artifacts \
          --host 0.0.0.0 \
          --port 5000 &
        sleep 10
        
    - name: Run tests
      run: |
        pytest tests/ -v || echo "Tests skipped - no model trained yet"
        
    - name: Train model (if dataset exists)
      run: |
        if [ -f "data/raw/creditcard.csv" ]; then
          python -m src.models.train --data-path data/raw/creditcard.csv
        else
          echo "Dataset not found. Please upload creditcard.csv"
        fi
        
    - name: Archive artifacts
      uses: actions/upload-artifact@v3
      with:
        name: model-artifacts
        path: |
          models/
          mlflow/
        retention-days: 30

  deploy:
    needs: train
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to EC2
      env:
        SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        echo "$SSH_KEY" > private_key.pem
        chmod 600 private_key.pem
        
        ssh -i private_key.pem -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
          cd /home/ubuntu/credit-card-fraud-detection
          
          # Pull latest changes
          git pull origin main
          
          # Install dependencies
          source venv/bin/activate
          pip install -r requirements.txt
          
          # Restart services
          sudo systemctl restart mlflow || echo "MLflow not running as service"
          sudo systemctl restart fraud-detection-api || echo "API not running as service"
          
          echo "Deployment completed"

